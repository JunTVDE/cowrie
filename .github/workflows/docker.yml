---
name: Docker Build and Publish

on:  # yamllint disable-line rule:truthy
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

  # Run manually
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Build and publish Docker image'

env:
  IMAGE_NAME: ${{ github.repository }}
  REGISTRY: ghcr.io

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    # needs: tox

    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for cosign OIDC
      packages: write  # Required for package push

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: set SOURCE_DATE_EPOCH
        run: echo "SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct)" >> $GITHUB_ENV

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.9.2
        if: ${{ (github.event_name != 'pull_request') }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Log in to the Container registry
        if: ${{ (github.event_name != 'pull_request') }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Container Image
        id: build
        uses: docker/build-push-action@v6
        with:
          push: false
          load: true
          tags: cowrie:test
          file: docker/Dockerfile

      - name: Test
        run: |
          docker run -d --rm cowrie:test

      - name: Push Container Image
        id: push
        if: ${{ (github.event_name != 'pull_request') }}
        uses: docker/build-push-action@v6
        with:
          file: docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          load: false
          sbom: true
          provenance: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
